// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// !!!!!!!!!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!!!!!!!!!!
// THIS IS AUTO GENERATED FILE - SIMULATED - HAND WRITTEN

syntax = "proto3";

package foo.bar.mymetric;

import "mixer/pkg/templates/TemplateExtensions.proto";
import "mixer/v1/config/descriptor/value_type.proto";
import "google/protobuf/struct.proto";

option (mixer.v1.config.template.template_variety) = TEMPLATE_VARIETY_REPORT;

option (mixer.v1.config.template.template_name) = "MyMetric";

message Type {
    istio.mixer.v1.config.descriptor.ValueType value = 1;
    map<string, istio.mixer.v1.config.descriptor.ValueType> dimensions = 2;
    string description = 3;
    Kind kind = 4;
}

message Constructor {
    string value = 1 [(mixer.v1.config.template.is_expr) = true];
    // This implies that values of the map are going to be expressions.
    map<string, string> dimensions = 2 [(mixer.v1.config.template.is_expr) = true];
}

enum Kind {
    METRIC_KIND_UNSPECIFIED = 0;
    GAUGE = 1;
    COUNTER = 2;
    DISTRIBUTION = 3;
}

message LinearBuckets {
    int32 num_finite_buckets = 1;
    double width = 2;
    double offset = 3;
}

message ExponentialBuckets {
    int32 num_finite_buckets = 1;
    double growth_factor = 2;
    double scale = 3;
}

message ExplicitBuckets {
    repeated double bounds = 1;
}

message BucketsDefinition {
    oneof definition {
        LinearBuckets linear_buckets = 1;
        ExponentialBuckets exponential_buckets = 2;
        ExplicitBuckets explicit_buckets = 3;
    }
}

/////////////////////// ADDED on top of the content of user written MyNewMetric.proto /////////////////////
/////////////////////// THIS IS ONLY MEANT TO BE USED FOR PASSING DATA TO GRPC BACKEND ////////////////////
// Within Mixer we will be using the generated go struct for this........ PTAL at ../MyNewMetric.go///////
message Instance {
    string type_name = 1;
    google.protobuf.Value value = 2;
    map<string, google.protobuf.Value> dimensions = 3;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////
